import esbuild from "esbuild";
import builtins from "builtin-modules";

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
If you want to view the source, see the repository of this plugin.
*/`;

const isProd =
  process.env.NODE_ENV === "production" ||
  process.argv.includes("--production");

const ctx = await esbuild.context({
  banner: { js: banner },
  entryPoints: ["main.ts"],        // change to ["src/main.ts"] if you move it
  bundle: true,
  platform: "browser",
  target: "es2020",                // matches Obsidian template better than es2018
  format: "cjs",
  outfile: "main.js",
  sourcemap: isProd ? false : "inline",
  treeShaking: true,
  minify: isProd,
  external: [
    "obsidian",
    "electron",
    "@codemirror/autocomplete",
    "@codemirror/collab",
    "@codemirror/commands",
    "@codemirror/language",
    "@codemirror/lint",
    "@codemirror/search",
    "@codemirror/state",
    "@codemirror/view",
    "@lezer/common",
    "@lezer/highlight",
    "@lezer/lr",
    ...builtins,
  ],
});

if (isProd) {
  await ctx.rebuild();
  await ctx.dispose();
  process.exit(0);
} else {
  await ctx.watch();
  console.log("esbuild watchingâ€¦ Press Ctrl+C to stop.");
  process.on("SIGINT", async () => {
    await ctx.dispose();
    process.exit(0);
  });
}
